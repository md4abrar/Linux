# SOFT LINK

# create a file
[root@instance-20211213-1640 demo]# touch original_file

# list the files

[root@instance-20211213-1640 demo]# ll
total 0
-rw-r--r-- 1 root  root  0 Jan 23 07:41 original_file

# create soft link of a file

[root@instance-20211213-1640 demo]# ln -s original_file link_to_orig_file   # These files can be in different locations in the server as well

[root@instance-20211213-1640 demo]# ls -li
total 0
138784721 lrwxrwxrwx 1 root  root  13 Jan 23 07:41 link_to_orig_file -> original_file
134415160 -rw-r--r-- 1 root  root   0 Jan 23 07:41 original_file


# ls -li to list the inode number of files. Inode number is different for the source and the link as the underlying data is available only in the main file and link is just pointing 
to the original file or directory

# soft link of a directory

[root@instance-20211213-1640 demo]# ln -s dir1 temp

141522360 drwxr-xr-x 2 root  root  46 Jan 23 07:43 dir1
141522377 lrwxrwxrwx 1 root  root   4 Jan 23 07:44 temp -> dir1

# HARD LINK

[root@instance-20211213-1640 demo]# ln dir2 temp2
ln: ‘dir2’: hard link not allowed for directory

# Hard link is done only for files

[root@instance-20211213-1640 demo]# ln origfile hardlink

[root@instance-20211213-1640 demo]# ls -li
total 0
141522378 -rw-r--r-- 2 root  root   0 Jan 23 07:49 hardlink
141522378 -rw-r--r-- 2 root  root   0 Jan 23 07:49 origfile

# Notice that the inode number is same for both the files. Because both the files store the same data and if one is deleted the other will still have the data.
